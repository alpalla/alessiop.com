"use strict";console.log("WORKER: executing.");var version="v1::",cacheName="cache",offlineFundamentals=["index.html","projects.html","about.html","style/about.css","style/blog-posts.css","style/common.css","style/header.css","style/markdown.css","style/post.css","style/projects.css","style/slider.css","style/theme.css"];self.addEventListener("install",function(e){console.log("WORKER: install event in progress."),e.waitUntil(caches.open(version+cacheName).then(function(e){return e.addAll(offlineFundamentals)}).then(function(){console.log("WORKER: install completed")}))}),self.addEventListener("fetch",function(s){console.log("WORKER: fetch event in progress."),"GET"===s.request.method?s.respondWith(caches.match(s.request).then(function(e){var t=fetch(s.request).then(function(e){console.log("WORKER: fetch response from network.",s.request.url);var t=e.clone();200===e.status&&caches.open(version+cacheName).then(function(e){return e.put(s.request,t)}).then(function(){console.log("WORKER: fetch response stored in cache.",s.request.url)});return e},n).catch(n);return console.log("WORKER: fetch event",e?"(cached)":"(network)",s.request.url),e||t;function n(){return console.log("WORKER: fetch request failed in both cache and network."),new Response("<h1>Service Unavailable</h1>",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"text/html"})})}})):console.log("WORKER: fetch event ignored.",s.request.method,s.request.url)}),self.addEventListener("activate",function(e){console.log("WORKER: activate event in progress."),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return!e.startsWith(version)}).map(function(e){return caches.delete(e)}))}).then(function(){console.log("WORKER: activate completed.")}))});